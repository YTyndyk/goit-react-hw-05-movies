{"version":3,"file":"static/js/623.1b125613.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Services/themoviedbAPI.js/ThemoviedbAPI.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Item = styled.li`\n  padding-bottom: 5px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Item } from './MovieList.styled';\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ title, id, name }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </Link>\n        </Item>\n      ))}\n    </ul>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getTrending = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getMovieSearch = async (query = '') => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?page=1&query=${query}&language=en`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieCredits = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieReviews = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n","import styled from 'styled-components';\nexport const Input = styled.input`\n  height: 25px;\n  font-size: 20px;\n  margin-right: 10px;\n`;\n","import { Input } from './SearchForm.styled';\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    // console.log(e.target.elements.query.value);\n    e.preventDefault();\n    const { query } = e.target.elements;\n    if (!query.value) {\n      alert('Plese, fill the input!');\n      return;\n    }\n\n    onSubmit(query.value);\n    e.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" />\n      <button style={{ height: 31, fontSize: 20 }} type=\"submit\">\n        Search movie\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getMovieSearch } from '../components/Services/themoviedbAPI.js/ThemoviedbAPI';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'panding',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n\n    setStatus(STATUS.PENDING);\n    getMovieSearch(query)\n      .then(movies => {\n        setMovies([...movies.results]);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        console.error(error);\n        setStatus(STATUS.REJECTED);\n      });\n  }, [searchParams]);\n\n  const onSubmit = query => {\n    setSearchParams({ query });\n  };\n  // if (movies.results === []) setStatus(STATUS.REJECTED);\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit} />\n      {status === STATUS.PENDING && <p>Loading...</p>}\n      {status === STATUS.RESOLVED && <MovieList movies={movies} />}\n      {status === STATUS.REJECTED && (\n        <b>Sorry, we don't have detailed information about this movie !!!</b>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Item","styled","MovieList","movies","location","useLocation","map","title","id","name","Link","to","state","from","axios","api_key","include_adult","getTrending","page","lng","params","language","data","Error","getMovieSearch","query","getMovieById","getMovieCredits","getMovieReviews","Input","SearchForm","onSubmit","e","preventDefault","target","elements","value","reset","alert","type","style","height","fontSize","STATUS","useState","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","useEffect","get","then","results","catch","error","console"],"sourceRoot":""}