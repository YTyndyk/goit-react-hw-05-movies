{"version":3,"file":"static/js/649.16424a7f.chunk.js","mappings":"oOAEaA,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,eACEC,MAAO,CACLC,YAAa,IAFjB,SAKGF,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,cAAeC,EAAzC,EAAyCA,UAAzC,OACX,gBACEN,MAAO,CACLO,MAAO,KAFX,WAME,gBACEC,IACEJ,EAAY,yCAC0BA,GAlBlD,8FAqBUK,IAAKJ,KAEP,uBAAIA,KACJ,yBAAG,cAAYC,OAXVH,EALI,KAqBlB,ECbD,EAZa,WACX,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOX,EAAP,KAAgBY,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAWM,EAAzB,GAC/B,GAAE,CAACL,IACGb,EAAQmB,OAAS,GACtB,SAACpB,EAAD,CAAYC,QAASA,KAErB,uBAAG,kCAEN,C,8LCdDoB,EAAAA,EAAAA,SAAAA,QAAA,+BACAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,mCACRC,eAAe,GAGV,IAAMC,EAAW,mCAAG,6GAAOC,EAAP,+BAAc,EAAGC,EAAjB,yCAEAL,EAAAA,EAAAA,IAAU,sBAAuB,CACtDM,OAAQ,CACNF,KAAAA,EACAG,SAAUF,KALS,uBAEfG,EAFe,EAEfA,KAFe,kBAQhBA,GARgB,wCAUjB,IAAIC,MAAM,4BAVO,0DAAH,qDAaXC,EAAc,mCAAG,2GAAOC,EAAP,+BAAe,GAAf,kBAEHX,EAAAA,EAAAA,IAAA,qCACSW,EADT,iBAFG,uBAElBH,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,sCAOpB,IAAIC,MAAM,2BAPU,yDAAH,qDAUdG,EAAY,mCAAG,WAAMC,GAAN,kGAEDb,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,iBAFC,uBAEhBL,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,sCAKlB,IAAIC,MAAM,2BALQ,yDAAH,sDAQZb,EAAe,mCAAG,WAAMiB,GAAN,kGAEJb,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,yBAFI,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,sCAKrB,IAAIC,MAAM,2BALW,yDAAH,sDAQfK,EAAe,mCAAG,WAAMD,GAAN,kGAEJb,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,yBAFI,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,sCAKrB,IAAIC,MAAM,2BALW,yDAAH,qD","sources":["components/CreditList/CreditList.js","components/Cast.js","components/Services/themoviedbAPI.js/ThemoviedbAPI.js"],"sourcesContent":["const defaultImage =\n  'https://www.shutterstock.com/image-vector/no-image-available-vector-hand-600w-745639717.jpg';\nexport const CreditList = ({ credits }) => {\n  return (\n    <ul\n      style={{\n        paddingLeft: 20,\n      }}\n    >\n      {credits.map(({ cast_id, profile_path, original_name, character }) => (\n        <li\n          style={{\n            width: 150,\n          }}\n          key={cast_id}\n        >\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                : defaultImage\n            }\n            alt={original_name}\n          />\n          <p>{original_name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'components/Services/themoviedbAPI.js/ThemoviedbAPI';\nimport { CreditList } from './CreditList/CreditList';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(({ cast }) => setCredits(cast));\n  }, [movieId]);\n  return credits.length > 0 ? (\n    <CreditList credits={credits} />\n  ) : (\n    <p>We no have cast for this movie</p>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getTrending = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getMovieSearch = async (query = '') => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?page=1&query=${query}&language=en`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieCredits = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieReviews = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n"],"names":["CreditList","credits","style","paddingLeft","map","cast_id","profile_path","original_name","character","width","src","alt","useState","setCredits","movieId","useParams","useEffect","getMovieCredits","then","cast","length","axios","api_key","include_adult","getTrending","page","lng","params","language","data","Error","getMovieSearch","query","getMovieById","id","getMovieReviews"],"sourceRoot":""}