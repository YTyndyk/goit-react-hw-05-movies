{"version":3,"file":"static/js/514.68fa195f.chunk.js","mappings":"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","sources":["components/Services/themoviedbAPI.js/ThemoviedbAPI.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getTrending = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\nexport const getMovieSearch = async (query = '') => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?page=1&query=${query}&language=en`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieCredits = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\nexport const getMovieReviews = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/reviews?language=en`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n","import styled from 'styled-components';\nexport const Poster = styled.img`\n  width: 300px;\n  display: block;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nexport const MovieInfo = styled.div`\n  margin-left: 20px;\n`;\nexport const MovieTitle = styled.div`\n  margin: 0;\n  font-size: 30px;\n  padding: 10px 0;\n  font-weight: 500;\n`;\nexport const MovieText = styled.div`\n  margin: 0;\n  font-size: 20px;\n  padding: 10px 0;\n`;\n","import {\n  Poster,\n  Wrapper,\n  MovieInfo,\n  MovieTitle,\n  MovieText,\n} from './MovieCard.styled';\nexport const MovieCard = props => {\n  const { poster_path, title, release_date, overview, vote_average, genres } =\n    props.movie;\n  const poster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const defaultImage =\n    'https://holstovich.art/content/images/1/1000x1000l80br20/kartina-russkiy-voennyy-korabl-idi-nakhy-50804578290634.webp';\n\n  const userScore = (vote_average * 10).toFixed();\n  const genresList = genres.map(ganre => ganre.name).join(', ');\n  return (\n    <Wrapper>\n      <Poster src={poster_path ? poster : defaultImage} alt={title} />\n      <MovieInfo>\n        <MovieTitle>\n          {title} ({release_date.slice(0, 4)})\n        </MovieTitle>\n        <MovieText>User score: {userScore}%</MovieText>\n        <h2>Overview</h2>\n        <MovieText>{overview}</MovieText>\n        <h2>Genres</h2>\n        <MovieText>{genresList}</MovieText>\n      </MovieInfo>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  min-height: 400px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-image: url(${props => props.backdrop_path});\n`;\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport React, { useEffect, useState, Suspense, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Link, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'components/Services/themoviedbAPI.js/ThemoviedbAPI';\nimport { Container } from './MovieDetails.styled';\nimport { MovieText } from 'components/MovieCard/MovieCard.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location?.state?.from ?? '/');\n  console.log(location);\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(movie => {\n        setMovie(movie);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n  if (!movie) return;\n\n  return (\n    <>\n      <Container>\n        <Link\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            fontWeight: 500,\n            margin: 10,\n            color: 'black',\n            textDecoration: 'none',\n          }}\n          to={backLinkLocationRef.current}\n        >\n          Go to back\n        </Link>\n        <MovieCard movie={movie} />\n        <ul>\n          <li>\n            <Link\n              style={{ textDecoration: 'none', fontSize: 26, color: 'inherit' }}\n              to=\"cast\"\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              style={{ textDecoration: 'none', fontSize: 26, color: 'inherit' }}\n              to=\"reviews\"\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <MovieText>Additional information</MovieText>\n      </Container>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","include_adult","getTrending","page","lng","params","language","data","Error","getMovieSearch","query","getMovieById","id","getMovieCredits","getMovieReviews","Poster","styled","Wrapper","MovieInfo","MovieTitle","MovieText","MovieCard","props","movie","poster_path","title","release_date","overview","vote_average","genres","poster","userScore","toFixed","genresList","map","ganre","name","join","src","alt","slice","Container","backdrop_path","useState","setMovie","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","console","log","useEffect","then","catch","error","Link","style","display","flexDirection","alignItems","fontWeight","margin","color","textDecoration","to","current","fontSize","Suspense","fallback"],"sourceRoot":""}